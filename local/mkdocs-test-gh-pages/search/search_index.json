{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home of MkDocs Test","text":""},{"location":"Mermaid/bigmermaid/","title":"Big Mermaid","text":"<pre><code>graph TD;\n    A[Start] --&gt; B{Initial Check};\n\n    B --&gt; |True| C[Execute Task A1];\n    B --&gt; |False| D[Execute Task A2];\n\n    C --&gt; E{Evaluate Condition 1};\n    D --&gt; F{Evaluate Condition 2};\n\n    E --&gt; |True| G[Process A1.1];\n    E --&gt; |False| H[Process A1.2];\n    F --&gt; |True| I[Process A2.1];\n    F --&gt; |False| J[Process A2.2];\n\n    G --&gt; K{Decision Point 1};\n    H --&gt; L{Decision Point 2};\n    I --&gt; M{Decision Point 3};\n    J --&gt; N{Decision Point 4};\n\n    K --&gt; |Option 1| O[Action 1A];\n    K --&gt; |Option 2| P[Action 1B];\n    L --&gt; |Option 1| Q[Action 2A];\n    L --&gt; |Option 2| R[Action 2B];\n    M --&gt; |Option 1| S[Action 3A];\n    M --&gt; |Option 2| T[Action 3B];\n    N --&gt; |Option 1| U[Action 4A];\n    N --&gt; |Option 2| V[Action 4B];\n\n    O --&gt; W[Follow-up Task A1];\n    P --&gt; W;\n    Q --&gt; X[Follow-up Task A2];\n    R --&gt; X;\n    S --&gt; Y[Follow-up Task A3];\n    T --&gt; Y;\n    U --&gt; Z[Follow-up Task A4];\n    V --&gt; Z;\n\n    W --&gt; AA{Final Check 1};\n    X --&gt; AB{Final Check 2};\n    Y --&gt; AC{Final Check 3};\n    Z --&gt; AD{Final Check 4};\n\n    AA --&gt; |Pass| AE[Completion 1];\n    AA --&gt; |Fail| AF[Re-evaluate A1];\n    AB --&gt; |Pass| AG[Completion 2];\n    AB --&gt; |Fail| AH[Re-evaluate A2];\n    AC --&gt; |Pass| AI[Completion 3];\n    AC --&gt; |Fail| AJ[Re-evaluate A3];\n    AD --&gt; |Pass| AK[Completion 4];\n    AD --&gt; |Fail| AL[Re-evaluate A4];\n\n    AE --&gt; AM[End];\n    AF --&gt; B;\n    AG --&gt; AM;\n    AH --&gt; B;\n    AI --&gt; AM;\n    AJ --&gt; B;\n    AK --&gt; AM;\n    AL --&gt; B;\n\n    Client --&gt; DNS &amp; CDN &amp; lb[Load Balancer]\n    lb --&gt; web[Web Server]\n    subgraph api\n    web --&gt; accounts[Accounts API] &amp; read[Read API]\n    memoryCache[Memory Cache]\n    end\n\n    accounts --&gt; queue[Queue] --&gt; tes\n\n\n    subgraph storage\n    dbPrimary[(SQL Write Primary)] -.- dbReplica[(SQL Read Replicas)]\n    objectStore[(Object Store)]\n    end\n\n    subgraph services\n    tes[Transaction Extraction Service] --&gt; category[Category Service] &amp; budget[Budget Service] &amp; notif[Notification Service]\n    end\n\n    tes --&gt; objectStore\n    CDN --&gt; objectStore\n    tes --&gt; dbPrimary\n    accounts --&gt; dbPrimary &amp; dbReplica\n    read --&gt; dbReplica &amp; memoryCache[Memory Cache]</code></pre> <pre><code>---\ntitle: Mint (Scaled)\n---\ngraph TB\nClient --&gt; DNS &amp; CDN &amp; lb[Load Balancer]\nlb --&gt; web[Web Server]\nsubgraph api\nweb --&gt; accounts[Accounts API] &amp; read[Read API]\nmemoryCache[Memory Cache]\nend\n\naccounts --&gt; queue[Queue] --&gt; tes\n\n\nsubgraph storage\ndbPrimary[(SQL Write Primary)] -.- dbReplica[(SQL Read Replicas)]\nobjectStore[(Object Store)]\nend\n\nsubgraph services\ntes[Transaction Extraction Service] --&gt; category[Category Service] &amp; budget[Budget Service] &amp; notif[Notification Service]\nend\n\ntes --&gt; objectStore\nCDN --&gt; objectStore\ntes --&gt; dbPrimary\naccounts --&gt; dbPrimary &amp; dbReplica\nread --&gt; dbReplica &amp; memoryCache[Memory Cache]</code></pre>"}]}